server:
  port: 8080
  address: 0.0.0.0

spring:
  datasource:
    url: jdbc:postgresql://ep-calm-silence-a15zko7l-pooler.ap-southeast-1.aws.neon.tech/neondb?user=neondb_owner&password=npg_5MIwCD4YhSdP&sslmode=require&channelBinding=require
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: false
  data:
    redis:
      host: localhost
      port: 6379
      database: 0

# Application Configuration
app:
  auth:
    enabled: true
    bypass-allowed: true
  cors:
    allowed-origins: "*"
  security:
    headers-enabled: false
  rate-limit:
    enabled: false
  jwt:
    secret: ${JWT_SECRET:development-secret-key-change-in-production-min-256-bits-long-enough-for-hmac-sha256}
    expiration: 86400000 # 24 hours

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:development-secret-key-change-in-production-min-256-bits-long-enough-for-hmac-sha256}
  expiration: 86400000 # 24 hours

# Logging Configuration
logging:
  level:
    com.namhatta: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always